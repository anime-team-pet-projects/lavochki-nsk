definitions:
  dto.CreateUser:
    properties:
      auth_date:
        type: integer
      first_name:
        type: string
      hash:
        type: string
      id:
        type: integer
      last_name:
        type: string
      photo_url:
        type: string
      username:
        type: string
    type: object
  dto.RefreshToken:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    post:
      parameters:
      - description: user info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: User registration
      tags:
      - Users
  /api/v1/users/refresh:
    post:
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      - description: token info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: User refresh token
      tags:
      - Users
swagger: "2.0"
